<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    

    <groupId>org.photoslide</groupId>
    <artifactId>PhotoSlide</artifactId>
    <version>1.5.4-RELEASE</version>   

    <!-- This description text is included in the Windows installer by default, see win-jpackage.txt -->
    <description>Photoslide is an app for managing and editing photos like Lightroom/ON1/...</description>

    <properties>
        <javafx.version>24</javafx.version>
        <mainClass>org.photoslide.App</mainClass>
        <app.name>Photoslide</app.name>        
        <maven.build.timestamp.format>yy.ww.WWkkmm</maven.build.timestamp.format>
        <app.version>1.5.4</app.version>        
        <jvm.modules>java.base,jdk.management,java.naming,java.sql,java.transaction.xa,java.xml,jdk.unsupported,java.management,java.datatransfer,java.desktop,java.security.jgss,java.xml.crypto,jdk.javadoc,javafx.media,javafx.controls,javafx.fxml,javafx.graphics,javafx.base,javafx.swing,javafx.web,java.logging,jdk.charsets,java.se,java.net.http,java.prefs,jdk.crypto.ec,jdk.crypto.cryptoki,jdk.localedata,java.compiler,jdk.net,java.instrument,java.scripting,java.rmi</jvm.modules>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <maven.compiler.source>24</maven.compiler.source>
        <maven.compiler.target>24</maven.compiler.target> 
        <!-- UUID via https://www.uuidgenerator.net -->
        <windows.upgrade.uuid>5be0a831-ee20-4692-8c71-6616381d9ccf</windows.upgrade.uuid>        
        <windows.vendor>ITArchitects</windows.vendor>        
    </properties>    
    
    <repositories>        
        <repository>
            <id>oss.sonatype.org</id>
            <name>Sonatype Snapshot Repository</name>
            <url>https://oss.sonatype.org/content/repositories/snapshots</url>
            <releases>
                <enabled>false</enabled>
            </releases>
            <snapshots>
                <enabled>true</enabled>
            </snapshots>
        </repository>                  
        <repository>
            <id>jcenter</id>
            <name>jcenter</name>
            <url>https://jcenter.bintray.com</url>
        </repository>
        <repository>
            <id>osgeo</id>
            <name>OSGeo Release Repository</name>
            <url>https://repo.osgeo.org/repository/release/</url>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
            <releases>
                <enabled>true</enabled>
            </releases>
        </repository>
        <repository>
            <id>osgeo-snapshot</id>
            <name>OSGeo Snapshot Repository</name>
            <url>https://repo.osgeo.org/repository/snapshot/</url>
            <snapshots>
                <enabled>true</enabled>
            </snapshots>
            <releases>
                <enabled>false</enabled>
            </releases>
        </repository>                         
        <repository>
            <id>jitpack.io</id>
            <url>https://jitpack.io</url>
        </repository>        
    </repositories>                        
    
    <pluginRepositories>
        <pluginRepository>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
            <id>bintray-jerady-maven</id>
            <name>bintray-plugins</name>
            <url>https://dl.bintray.com/jerady/maven</url>
        </pluginRepository>
    </pluginRepositories>

    <dependencies>
        <!-- This dependency is a normal Maven dependency, here mainly as an example. It brings in other transitive
        dependencies as well. You can remove it from your project (unless you happen to need to generate test data.  -->
        <dependency>
            <groupId>org.controlsfx</groupId>
            <artifactId>controlsfx</artifactId>
            <version>11.2.2</version>                        
        </dependency>          
        <dependency>
            <groupId>org.kordamp.ikonli</groupId>
            <artifactId>ikonli-core</artifactId>
            <version>12.3.1</version>            
        </dependency>        
        <dependency>
            <groupId>org.kordamp.ikonli</groupId>
            <artifactId>ikonli-javafx</artifactId>
            <version>12.3.1</version>            
        </dependency>        
        <dependency>
            <groupId>org.kordamp.ikonli</groupId>
            <artifactId>ikonli-themify-pack</artifactId>
            <version>12.3.1</version>            
        </dependency>
        <dependency>
            <groupId>org.kordamp.ikonli</groupId>
            <artifactId>ikonli-fontawesome-pack</artifactId>
            <version>12.3.1</version>
        </dependency>
        <dependency>
            <groupId>com.github.dragon66</groupId>
            <artifactId>icafe</artifactId>
            <version>1.1-SNAPSHOT</version>            
        </dependency>
        <dependency>
            <groupId>com.github.jai-imageio</groupId>
            <artifactId>jai-imageio-core</artifactId>
            <version>1.4.0</version>
        </dependency>        
        <dependency>
            <groupId>com.twelvemonkeys.imageio</groupId>
            <artifactId>imageio-core</artifactId>
            <version>3.12.0</version>
        </dependency>        
        <dependency>
            <groupId>com.twelvemonkeys.common</groupId>
            <artifactId>common-lang</artifactId>
            <version>3.12.0</version>
        </dependency>
        <dependency>
            <groupId>com.twelvemonkeys.common</groupId>
            <artifactId>common-io</artifactId>
            <version>3.12.0</version>
        </dependency>
        <dependency>
            <groupId>com.twelvemonkeys.common</groupId>
            <artifactId>common-image</artifactId>
            <version>3.12.0</version>
        </dependency>        
        <dependency>
            <groupId>com.twelvemonkeys.imageio</groupId>
            <artifactId>imageio-tiff</artifactId>
            <version>3.12.0</version>
        </dependency>
        <dependency>
            <groupId>com.twelvemonkeys.imageio</groupId>
            <artifactId>imageio-psd</artifactId>
            <version>3.12.0</version>
        </dependency>
        <dependency>
            <groupId>com.twelvemonkeys.imageio</groupId>
            <artifactId>imageio-webp</artifactId>
            <version>3.12.0</version>
        </dependency>
        <dependency>
            <groupId>com.twelvemonkeys.imageio</groupId>
            <artifactId>imageio-metadata</artifactId>
            <version>3.12.0</version>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-nop</artifactId>
            <version>2.0.11</version>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <version>2.0.11</version>
        </dependency>
        <dependency>
            <groupId>com.h2database</groupId>
            <artifactId>h2</artifactId>
            <version>2.3.232</version>            
        </dependency>                
        <dependency>
            <groupId>javax.media</groupId>
            <artifactId>jai_core</artifactId>
            <version>1.1.3</version>            
        </dependency>                        
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
            <version>2.18.3</version>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-annotations</artifactId>
            <version>2.18.3</version>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-core</artifactId>
            <version>2.18.3</version>
        </dependency>                 
        <dependency>
            <groupId>org.librawfx</groupId>
            <artifactId>LibRawFX</artifactId>
            <version>1.9.0</version>
        </dependency>
        <dependency>  
            <groupId>org.libheiffx</groupId>    
            <artifactId>LibHeifFX</artifactId>  
            <version>1.2.6</version>  
        </dependency>
        <dependency>
            <groupId>com.sothawo</groupId>
            <artifactId>mapjfx</artifactId>
            <version>3.1.0</version>            
        </dependency>
        <dependency>
            <groupId>org.boofcv</groupId>
            <artifactId>boofcv-core</artifactId>
            <version>1.2.0</version>
        </dependency>        
        <dependency>
            <groupId>fr.dudie</groupId>
            <artifactId>nominatim-api</artifactId>
            <version>3.4</version>
        </dependency>
        <dependency>
            <groupId>com.drewnoakes</groupId>
            <artifactId>metadata-extractor</artifactId>
            <version>2.19.0</version>            
        </dependency>
        <dependency>
            <groupId>de.jangassen</groupId>
            <artifactId>nsmenufx</artifactId>
            <version>3.1.0</version>
        </dependency>
        <dependency>
            <groupId>io.github.typhon0</groupId>
            <artifactId>AnimateFX</artifactId>
            <version>1.3.0</version>            
        </dependency>               

        <!-- This downloads the platform specific JavaFX libraries used by the project. -->
        <!-- For the final installable, the JavaFX dependencies are provided via modules, but by including these here
        they work nicely with with IDEs and other Maven plugins (e.g. the javafx:run). -->
        <dependency>
            <groupId>org.openjfx</groupId>
            <artifactId>javafx-base</artifactId>
            <version>${javafx.version}</version>            
        </dependency>        
        <dependency>
            <groupId>org.openjfx</groupId>
            <artifactId>javafx-fxml</artifactId>
            <version>${javafx.version}</version>            
        </dependency>
        <dependency>
            <groupId>org.openjfx</groupId>
            <artifactId>javafx-graphics</artifactId>
            <version>${javafx.version}</version>            
        </dependency>
        <dependency>
            <groupId>org.openjfx</groupId>
            <artifactId>javafx-controls</artifactId>
            <version>${javafx.version}</version>            
        </dependency> 
        <dependency>
            <groupId>org.openjfx</groupId>
            <artifactId>javafx-media</artifactId>
            <version>${javafx.version}</version>            
        </dependency> 
        <dependency>
            <groupId>org.openjfx</groupId>
            <artifactId>javafx-swing</artifactId>            
            <version>${javafx.version}</version>            
        </dependency>       
        <dependency>
            <groupId>org.openjfx</groupId>
            <artifactId>javafx-web</artifactId>
            <version>${javafx.version}</version>            
        </dependency> 
        <dependency>
            <groupId>com.dlsc.preferencesfx</groupId>
            <artifactId>preferencesfx-core</artifactId>
            <version>11.17.0</version>
        </dependency>                
    </dependencies>

    <build>        
        <resources>
            <resource>
                <directory>${project.basedir}/src/main/resources</directory>
            </resource>
            <resource>                
                <directory>${project.basedir}/src/main/resources/pkg-config</directory>
                <filtering>true</filtering>
                <targetPath>${project.build.directory}/pkg-config</targetPath>
            </resource>                        
        </resources>

        <plugins>
            <plugin>
                <groupId>kr.motd.maven</groupId>
                <artifactId>os-maven-plugin</artifactId>
                <version>1.7.1</version>
                <executions>
                    <execution>
                        <phase>initialize</phase>
                        <goals>
                            <goal>detect</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId> 
                <artifactId>properties-maven-plugin</artifactId> 
                <version>1.2.1</version> 
                <executions> 
                    <execution> 
                        <phase>generate-resources</phase> 
                        <goals> 
                            <goal>write-project-properties</goal> 
                        </goals> 
                        <configuration> 
                            <outputFile>${project.build.outputDirectory}/properties-from-pom.properties</outputFile> 
                        </configuration> 
                    </execution> 
                </executions> 
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-install-plugin</artifactId>
                <configuration>                    
                    <skip>true</skip>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <executions>
                    <execution>                        
                        <id>copy-dependencies</id>
                        <phase>package</phase>
                        <goals>
                            <goal>copy-dependencies</goal>
                        </goals>
                        <configuration>                            
                            <excludeGroupIds>org.openjfx</excludeGroupIds>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>                
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <configuration>
                    <archive>                   
                        <manifest>
                            <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
                            <addDefaultSpecificationEntries>true</addDefaultSpecificationEntries>
                        </manifest>
                    </archive>
                    <outputDirectory>${project.build.directory}/dependency</outputDirectory>
                </configuration>
            </plugin>
            <plugin>                
                <groupId>org.openjfx</groupId>
                <artifactId>javafx-maven-plugin</artifactId>
                <version>0.0.8</version>                                                
                <executions>
                    <execution>                            
                        <!-- Usage: mvn clean javafx:run -->
                        <id>default-cli</id>  
                        <configuration>
                            <mainClass>${mainClass}</mainClass>
                            <options>                                                                     
                                <option>-XX:+UseZGC</option>
                                <option>-Xms2g</option>
                                <option>--enable-preview</option>
                                <option>--add-opens=javafx.graphics/javafx.scene=ALL-UNNAMED</option>                        
                                <option>--enable-native-access=ALL-UNNAMED,javafx.media,javafx.web,javafx.graphics</option>
                                <option>--add-exports=java.desktop/sun.awt.image=ALL-UNNAMED</option>                                        
                                <option>--add-opens=javafx.controls/javafx.scene.control.skin=ALL-UNNAMED</option>                                                                                  
                                <option>--add-opens=javafx.graphics/javafx.scene=ALL-UNNAMED</option>                                                                                
                                <option>--add-exports=javafx.base/com.sun.javafx.event=ALL-UNNAMED</option>                                        
                                <option>--add-exports=javafx.controls/com.sun.javafx.scene.control.behavior=ALL-UNNAMED</option>                                                                                
                                <option>--add-exports=javafx.graphics/com.sun.javafx.iio=ALL-UNNAMED</option>                                        
                                <option>--add-exports=javafx.graphics/com.sun.javafx.iio.common=ALL-UNNAMED</option>                                        
                                <option>--add-exports=javafx.graphics/com.sun.javafx.application=ALL-UNNAMED</option>                                        
                                <option>--add-exports=javafx.graphics/com.sun.glass.ui=ALL-UNNAMED</option>                                                                                
                                <option>--add-exports=javafx.graphics/com.sun.javafx.iio=ALL-UNNAMED</option>                                                                                
                                <option>--add-exports=javafx.graphics/com.sun.javafx.iio.common=ALL-UNNAMED</option>                                                      
                                <option>--add-opens=java.base/java.net=ALL-UNNAMED</option>
                                <option>--sun-misc-unsafe-memory-access=allow</option>
                            </options>
                        </configuration>                          
                    </execution>
                    <execution>                            
                        <id>debug</id>
                        <configuration>
                            <mainClass>${mainClass}</mainClass>
                            <options>                                     
                                <option>-agentlib:jdwp=transport=dt_socket,server=y,suspend=y,address=localhost:8000</option>                                    
                                <option>-XX:+UseZGC</option>
                                <option>-Xms2g</option>
                                <option>--enable-preview</option>
                                <option>--add-opens=javafx.graphics/javafx.scene=ALL-UNNAMED</option>                        
                                <option>--enable-native-access=ALL-UNNAMED,javafx.media,javafx.web,javafx.graphics</option>
                                <option>--add-exports=java.desktop/sun.awt.image=ALL-UNNAMED</option>                                        
                                <option>--add-opens=javafx.controls/javafx.scene.control.skin=ALL-UNNAMED</option>                                                                                  
                                <option>--add-opens=javafx.graphics/javafx.scene=ALL-UNNAMED</option>                                                                                
                                <option>--add-exports=javafx.base/com.sun.javafx.event=ALL-UNNAMED</option>                                        
                                <option>--add-exports=javafx.controls/com.sun.javafx.scene.control.behavior=ALL-UNNAMED</option>                                                                                
                                <option>--add-exports=javafx.graphics/com.sun.javafx.iio=ALL-UNNAMED</option>                                        
                                <option>--add-exports=javafx.graphics/com.sun.javafx.iio.common=ALL-UNNAMED</option>                                        
                                <option>--add-exports=javafx.graphics/com.sun.javafx.application=ALL-UNNAMED</option>                                        
                                <option>--add-exports=javafx.graphics/com.sun.glass.ui=ALL-UNNAMED</option>                                                                                
                                <option>--add-exports=javafx.graphics/com.sun.javafx.iio=ALL-UNNAMED</option>                                                                                
                                <option>--add-exports=javafx.graphics/com.sun.javafx.iio.common=ALL-UNNAMED</option>                                                      
                                <option>--add-opens=java.base/java.net=ALL-UNNAMED</option>
                                <option>--sun-misc-unsafe-memory-access=allow</option>
                            </options>
                        </configuration>
                    </execution>
                    <execution>                            
                        <id>ide-debug</id>
                        <configuration>
                            <mainClass>${mainClass}</mainClass>
                            <options>                                     
                                <option>-agentlib:jdwp=transport=dt_socket,server=n,address=${jpda.address}</option>                                    
                                <option>-XX:+UseZGC</option>
                                <option>-Xms2g</option>
                                <option>--enable-preview</option>
                                <option>--add-opens=javafx.graphics/javafx.scene=ALL-UNNAMED</option>                        
                                <option>--enable-native-access=ALL-UNNAMED,javafx.media,javafx.web,javafx.graphics</option>
                                <option>--add-exports=java.desktop/sun.awt.image=ALL-UNNAMED</option>                                        
                                <option>--add-opens=javafx.controls/javafx.scene.control.skin=ALL-UNNAMED</option>                                                                                  
                                <option>--add-opens=javafx.graphics/javafx.scene=ALL-UNNAMED</option>                                                                                
                                <option>--add-exports=javafx.base/com.sun.javafx.event=ALL-UNNAMED</option>                                        
                                <option>--add-exports=javafx.controls/com.sun.javafx.scene.control.behavior=ALL-UNNAMED</option>                                                                                
                                <option>--add-exports=javafx.graphics/com.sun.javafx.iio=ALL-UNNAMED</option>                                        
                                <option>--add-exports=javafx.graphics/com.sun.javafx.iio.common=ALL-UNNAMED</option>                                        
                                <option>--add-exports=javafx.graphics/com.sun.javafx.application=ALL-UNNAMED</option>                                        
                                <option>--add-exports=javafx.graphics/com.sun.glass.ui=ALL-UNNAMED</option>                                                                                
                                <option>--add-exports=javafx.graphics/com.sun.javafx.iio=ALL-UNNAMED</option>                                                                                
                                <option>--add-exports=javafx.graphics/com.sun.javafx.iio.common=ALL-UNNAMED</option>                                                      
                                <option>--add-opens=java.base/java.net=ALL-UNNAMED</option>
                                <option>--sun-misc-unsafe-memory-access=allow</option>
                            </options>
                        </configuration>
                    </execution>
                    <execution>                            
                        <id>ide-profile</id>
                        <configuration>
                            <mainClass>${mainClass}</mainClass>
                            <options>
                                <option>-XX:+UseZGC</option>
                                <option>-Xms2g</option>
                                <option>--enable-preview</option>
                                <option>--add-opens=javafx.graphics/javafx.scene=ALL-UNNAMED</option>                        
                                <option>--enable-native-access=ALL-UNNAMED,javafx.media,javafx.web,javafx.graphics</option>
                                <option>--add-exports=java.desktop/sun.awt.image=ALL-UNNAMED</option>                                        
                                <option>--add-opens=javafx.controls/javafx.scene.control.skin=ALL-UNNAMED</option>                                                                                  
                                <option>--add-opens=javafx.graphics/javafx.scene=ALL-UNNAMED</option>                                                                                
                                <option>--add-exports=javafx.base/com.sun.javafx.event=ALL-UNNAMED</option>                                        
                                <option>--add-exports=javafx.controls/com.sun.javafx.scene.control.behavior=ALL-UNNAMED</option>                                                                                
                                <option>--add-exports=javafx.graphics/com.sun.javafx.iio=ALL-UNNAMED</option>                                        
                                <option>--add-exports=javafx.graphics/com.sun.javafx.iio.common=ALL-UNNAMED</option>                                        
                                <option>--add-exports=javafx.graphics/com.sun.javafx.application=ALL-UNNAMED</option>                                        
                                <option>--add-exports=javafx.graphics/com.sun.glass.ui=ALL-UNNAMED</option>                                                                                
                                <option>--add-exports=javafx.graphics/com.sun.javafx.iio=ALL-UNNAMED</option>                                                                                
                                <option>--add-exports=javafx.graphics/com.sun.javafx.iio.common=ALL-UNNAMED</option>                                                      
                                <option>--add-opens=java.base/java.net=ALL-UNNAMED</option>
                                <option>--sun-misc-unsafe-memory-access=allow</option>
                                <option>${profiler.jvmargs.arg1}</option>
                                <option>${profiler.jvmargs.arg2}</option>
                                <option>${profiler.jvmargs.arg3}</option>
                                <option>${profiler.jvmargs.arg4}</option>
                                <option>${profiler.jvmargs.arg5}</option>                                    
                            </options>
                        </configuration>
                    </execution>
                </executions> 
            </plugin>
            
        </plugins>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-clean-plugin</artifactId>
                    <version>3.3.2</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>3.11.0</version>
                    <configuration>
                        <enablePreview>true</enablePreview>
                        <fork>true</fork>
                        <compilerArgs>
                            <arg>--enable-preview</arg>
                            <arg>-J--illegal-access=permit</arg>                               
                        </compilerArgs>                                     
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-dependency-plugin</artifactId>
                    <version>3.8.1</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-install-plugin</artifactId>
                    <version>3.1.4</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-jar-plugin</artifactId>
                    <version>3.3.0</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-project-info-reports-plugin</artifactId>
                    <version>3.7.0</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-resources-plugin</artifactId>
                    <version>3.3.1</version>
                </plugin>

                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-site-plugin</artifactId>
                    <version>3.12.1</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-surefire-plugin</artifactId>
                    <version>3.5.2</version>
                </plugin>
            </plugins>
        </pluginManagement>
    </build>
    <reporting>
        <plugins>
            <!-- http://mojo.codehaus.org/versions-maven-plugin/version-rules.html -->
            <!-- This plugin is a utility to find outdated dependencies in your project. Just run mvn site and
           the resulting HTML reports in target/site will let you know what plugins and dependencies are out of date.
            -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>versions-maven-plugin</artifactId>
                <version>2.11.0</version>
                <reportSets>
                    <reportSet>
                        <reports>
                            <report>dependency-updates-report</report>
                            <report>plugin-updates-report</report>
                            <report>property-updates-report</report>
                        </reports>
                    </reportSet>
                </reportSets>
                <configuration>
                    <processDependencyManagementTransitive>false</processDependencyManagementTransitive>
                </configuration>
            </plugin>            
        </plugins>
    </reporting>
    <profiles>        
        <profile>
            <id>unix-active</id>
            <activation>
                <os>
                    <family>unix</family>
                </os>
            </activation>
            <properties>
                <platform>linux</platform>
            </properties>
        </profile>
        <profile>
            <id>windows-active</id>
            <activation>
                <os>
                    <family>windows</family>
                </os>
            </activation>
            <properties>
                <platform>win</platform>
            </properties>            
        </profile>
        <profile>
            <id>mac-active</id>
            <activation>
                <os>
                    <family>mac</family>                    
                </os>
            </activation>
            <properties>
                <platform>mac</platform>
            </properties>
        </profile>       
        <profile>
            <id>package</id>
            <build>
                <plugins>
                    <plugin>
                        <!-- https://github.com/wiverson/jtoolprovider-plugin -->
                        <groupId>io.github.wiverson</groupId>
                        <artifactId>jtoolprovider-plugin</artifactId>
                        <version>1.0.34</version>                
                        <executions>                    
                            <execution>
                                <id>jlink</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>java-tool</goal>
                                </goals>
                                <configuration>
                                    <toolName>jlink</toolName>
                                    <removeDirectories>${project.build.directory}/jvm-image/</removeDirectories>
                                    <modulePath>${project.basedir}/jmods/${os.detected.classifier}-javafx/javafx-jmods-${javafx.version}/
                                    </modulePath>
                                    <addModules>${jvm.modules}</addModules>
                                    <output>${project.build.directory}/jvm-image</output>
                                    <args>
                                        <arg>--strip-native-commands</arg>
                                        <arg>--no-header-files</arg>
                                        <arg>--strip-debug</arg>
                                        <arg>--no-man-pages</arg>
                                        <arg>--compress=zip-6</arg>
                                    </args>
                                </configuration>
                            </execution>                    
                            <execution>
                                <id>jpackage</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>java-tool</goal>
                                </goals>
                                <configuration>
                                    <toolName>jpackage</toolName>
                                    <removeDirectories>${project.build.directory}/installer-work</removeDirectories>
                                    <args>@${project.build.directory}/pkg-config/${platform}-jpackage.txt</args>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>
